name: Update 24SevenOffice API Documentation

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows for manual triggering
  push:
    branches:
      - main

jobs:
  update-api-doc:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Ensure the workflow doesn't run on its own commits
      - name: Check commit author
        id: check_author
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          if [[ "$AUTHOR_NAME" == "GitHub Action" ]]; then
            echo "This commit was made by GitHub Actions. Skipping."
            exit 0
          fi

      # Step 3: Set up environment with GITHUB_TOKEN
      - name: Set up environment with GITHUB_TOKEN
        run: echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Step 4: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 5: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 6: Run the update_api_doc.py script
      - name: Run Python script and update API Documentation
        run: python update_api_doc.py

      # Step 7: Check for changes in the 24SevenOfficeAPI.json file
      - name: Check for changes
        id: check_changes
        run: |
          git fetch
          git diff --exit-code 24SevenOfficeAPI.json || echo "has_changes=true" >> $GITHUB_ENV

      # Step 8: Commit and push updated API documentation (only if there are changes)
      - name: Commit updated API documentation
        if: env.has_changes == 'true'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git add 24SevenOfficeAPI.json
          git commit -m "Update 24SevenOffice API
